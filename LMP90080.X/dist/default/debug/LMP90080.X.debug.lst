

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Dec 30 22:59:48 2016

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1
    23                           	psect	text16,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 1.40
    28                           ; Generated 01/12/2016 GMT
    29                           ; 
    30                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F2550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATBbits	set	3978
    62  0000                     _PORTA	set	3968
    63  0000                     _PORTB	set	3969
    64  0000                     _PORTBbits	set	3969
    65  0000                     _PORTC	set	3970
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISBbits	set	3987
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISCbits	set	3988
    71  0000                     _ADCON1	set	4033
    72  0000                     _PIR1bits	set	3998
    73  0000                     _SSPBUF	set	4041
    74  0000                     _SSPCON1bits	set	4038
    75  0000                     _SSPSTATbits	set	4039
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  007A18                     __pcinit:
    81                           	opt stack 0
    82  007A18                     start_initialization:
    83                           	opt stack 0
    84  007A18                     __initialization:
    85                           	opt stack 0
    86  007A18                     end_of_initialization:
    87                           	opt stack 0
    88  007A18                     __end_of__initialization:
    89                           	opt stack 0
    90  007A18  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91  007A1A  6EF8               	movwf	tblptru,c
    92  007A1C  0100               	movlb	0
    93  007A1E  EF62  F03D         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           
    96                           	psect	cstackCOMRAM
    97  000001                     __pcstackCOMRAM:
    98                           	opt stack 0
    99  000001                     ??_delay10ms:
   100  000001                     ?_constructTransaction1:
   101                           	opt stack 0
   102  000001                     ?_contructInstruction2Byte:
   103                           	opt stack 0
   104  000001                     D_SPI_Write@data:
   105                           	opt stack 0
   106  000001                     D_SPI_Enable@enable:
   107                           	opt stack 0
   108  000001                     contructInstruction2Byte@sz:
   109                           	opt stack 0
   110  000001                     constructTransaction1@uab:
   111                           	opt stack 0
   112  000001                     inst2ToByte@inst2:
   113                           	opt stack 0
   114                           
   115                           ; 3 bytes @ 0x0
   116  000001                     	ds	1
   117  000002                     D_SPI_Init@mode:
   118                           	opt stack 0
   119  000002                     contructInstruction2Byte@lra:
   120                           	opt stack 0
   121  000002                     delay10ms@d:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x1
   125  000002                     	ds	1
   126  000003                     D_SPI_Init@MS:
   127                           	opt stack 0
   128  000003                     constructTransaction1@rw:
   129                           	opt stack 0
   130  000003                     delay10ms@i:
   131                           	opt stack 0
   132                           
   133                           ; 1 bytes @ 0x2
   134  000003                     	ds	1
   135  000004                     ??_inst2ToByte:
   136  000004                     contructInstruction2Byte@rwb:
   137                           	opt stack 0
   138  000004                     delay100ms@d:
   139                           	opt stack 0
   140  000004                     constructTransaction1@transaction1:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x3
   144  000004                     	ds	1
   145  000005                     delay100ms@i:
   146                           	opt stack 0
   147  000005                     contructInstruction2Byte@inst2:
   148                           	opt stack 0
   149                           
   150                           ; 3 bytes @ 0x4
   151  000005                     	ds	1
   152  000006                     delay1000ms@d:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x5
   156  000006                     	ds	1
   157  000007                     inst2ToByte@d:
   158                           	opt stack 0
   159  000007                     delay1000ms@i:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x6
   163  000007                     	ds	1
   164  000008                     ?_constructTransaction2:
   165                           	opt stack 0
   166  000008                     inst2ToByte@a:
   167                           	opt stack 0
   168  000008                     constructTransaction2@rwb:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x7
   172  000008                     	ds	1
   173  000009                     inst2ToByte@b:
   174                           	opt stack 0
   175  000009                     constructTransaction2@sz:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x8
   179  000009                     	ds	1
   180  00000A                     inst2ToByte@c:
   181                           	opt stack 0
   182  00000A                     constructTransaction2@lra:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x9
   186  00000A                     	ds	1
   187  00000B                     writeTransaction@t:
   188                           	opt stack 0
   189                           
   190                           ; 6 bytes @ 0xA
   191  00000B                     	ds	1
   192  00000C                     constructTransaction2@db:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0xB
   196  00000C                     	ds	1
   197  00000D                     constructTransaction2@transaction2:
   198                           	opt stack 0
   199                           
   200                           ; 4 bytes @ 0xC
   201  00000D                     	ds	4
   202  000011                     writeTransaction@input:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x10
   206  000011                     	ds	1
   207  000012                     D_ADC_ReadRegister@data:
   208                           	opt stack 0
   209  000012                     D_ADC_WriteRegister@data:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x11
   213  000012                     	ds	1
   214  000013                     D_ADC_ReadRegister@addr:
   215                           	opt stack 0
   216  000013                     D_ADC_WriteRegister@addr:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x12
   220  000013                     	ds	1
   221  000014                     D_ADC_ReadRegister@transaction:
   222                           	opt stack 0
   223  000014                     D_ADC_WriteRegister@transaction:
   224                           	opt stack 0
   225                           
   226                           ; 6 bytes @ 0x13
   227  000014                     	ds	6
   228  00001A                     main@a:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x19
   232  00001A                     	ds	1
   233                           tblptru	equ	0xFF8
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 53 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  a               1   25[COMRAM] unsigned char 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         1       0       0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0       0       0
   257 ;;      Totals:         1       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        1 bytes
   259 ;; Hardware stack levels required when called:    4
   260 ;; This function calls:
   261 ;;		_D_ADC_ReadRegister
   262 ;;		_D_ADC_WriteRegister
   263 ;;		_delay1000ms
   264 ;;		_initialize
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271  007AC4                     __ptext0:
   272                           	opt stack 0
   273  007AC4                     _main:
   274                           	opt stack 27
   275                           
   276                           ;main.c: 55: initialize();
   277                           
   278                           ;incstack = 0
   279  007AC4  EC07  F03D         	call	_initialize	;wreg free
   280                           
   281                           ;main.c: 57: delay1000ms(2);
   282  007AC8  0E02               	movlw	2
   283  007ACA  EC47  F03D         	call	_delay1000ms
   284                           
   285                           ;main.c: 58: D_ADC_WriteRegister(0x09, 0x16);
   286  007ACE  0E16               	movlw	22
   287  007AD0  6E12               	movwf	D_ADC_WriteRegister@data,c
   288  007AD2  0E09               	movlw	9
   289  007AD4  ECF0  F03D         	call	_D_ADC_WriteRegister
   290                           
   291                           ;main.c: 59: uint8_t a = D_ADC_ReadRegister(0x09);
   292  007AD8  0E09               	movlw	9
   293  007ADA  EC1A  F03E         	call	_D_ADC_ReadRegister
   294  007ADE  6E1A               	movwf	main@a,c
   295  007AE0                     l132:
   296  007AE0  D7FF               	goto	l132
   297  007AE2                     __end_of_main:
   298                           	opt stack 0
   299                           tblptru	equ	0xFF8
   300                           
   301 ;; *************** function _initialize *****************
   302 ;; Defined at:
   303 ;;		line 48 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   317 ;;      Params:         0       0       0       0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_D_ADC_Init
   326 ;;		_D_PORT_Init
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text1
   333  007A0E                     __ptext1:
   334                           	opt stack 0
   335  007A0E                     _initialize:
   336                           	opt stack 27
   337                           
   338                           ;main.c: 49: D_PORT_Init();
   339                           
   340                           ;incstack = 0
   341  007A0E  EC82  F03D         	call	_D_PORT_Init	;wreg free
   342                           
   343                           ;main.c: 50: D_ADC_Init();
   344  007A12  EC2F  F03D         	call	_D_ADC_Init	;wreg free
   345  007A16  0012               	return		;funcret
   346  007A18                     __end_of_initialize:
   347                           	opt stack 0
   348                           tblptru	equ	0xFF8
   349                           
   350 ;; *************** function _D_PORT_Init *****************
   351 ;; Defined at:
   352 ;;		line 31 in file "Drivers/PORT_Driver.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         0       0       0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_initialize
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text2
   380  007B04                     __ptext2:
   381                           	opt stack 0
   382  007B04                     _D_PORT_Init:
   383                           	opt stack 29
   384                           
   385                           ;PORT_Driver.c: 32: TRISA = 0x00; PORTA = 0x00;
   386                           
   387                           ;incstack = 0
   388  007B04  0E00               	movlw	0
   389  007B06  6E92               	movwf	3986,c	;volatile
   390  007B08  0E00               	movlw	0
   391  007B0A  6E80               	movwf	3968,c	;volatile
   392                           
   393                           ;PORT_Driver.c: 33: TRISB = 0x00; PORTB = 0x00;
   394  007B0C  0E00               	movlw	0
   395  007B0E  6E93               	movwf	3987,c	;volatile
   396  007B10  0E00               	movlw	0
   397  007B12  6E81               	movwf	3969,c	;volatile
   398                           
   399                           ;PORT_Driver.c: 34: TRISC = 0x00; PORTC = 0x00;
   400  007B14  0E00               	movlw	0
   401  007B16  6E94               	movwf	3988,c	;volatile
   402  007B18  0E00               	movlw	0
   403  007B1A  6E82               	movwf	3970,c	;volatile
   404                           
   405                           ;PORT_Driver.c: 35: ADCON1 = 0x0F;
   406  007B1C  0E0F               	movlw	15
   407  007B1E  6EC1               	movwf	4033,c	;volatile
   408                           
   409                           ;PORT_Driver.c: 37: TRISBbits.TRISB3 = 0; LATBbits.LATB3 = 0;
   410  007B20  9693               	bcf	3987,3,c	;volatile
   411  007B22  968A               	bcf	3978,3,c	;volatile
   412                           
   413                           ;PORT_Driver.c: 38: TRISBbits.TRISB4 = 0; LATBbits.LATB4 = 0;
   414  007B24  9893               	bcf	3987,4,c	;volatile
   415  007B26  988A               	bcf	3978,4,c	;volatile
   416                           
   417                           ;PORT_Driver.c: 39: TRISBbits.TRISB5 = 0; LATBbits.LATB5 = 0;
   418  007B28  9A93               	bcf	3987,5,c	;volatile
   419  007B2A  9A8A               	bcf	3978,5,c	;volatile
   420                           
   421                           ;PORT_Driver.c: 40: TRISBbits.TRISB6 = 0; LATBbits.LATB6 = 0;
   422  007B2C  9C93               	bcf	3987,6,c	;volatile
   423  007B2E  9C8A               	bcf	3978,6,c	;volatile
   424  007B30  0012               	return		;funcret
   425  007B32                     __end_of_D_PORT_Init:
   426                           	opt stack 0
   427                           tblptru	equ	0xFF8
   428                           
   429 ;; *************** function _D_ADC_Init *****************
   430 ;; Defined at:
   431 ;;		line 82 in file "Drivers/ADC_Driver.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   445 ;;      Params:         0       0       0       0       0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; Hardware stack levels required when called:    2
   452 ;; This function calls:
   453 ;;		_D_SPI_Enable
   454 ;;		_D_SPI_Init
   455 ;; This function is called by:
   456 ;;		_initialize
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text3
   461  007A5E                     __ptext3:
   462                           	opt stack 0
   463  007A5E                     _D_ADC_Init:
   464                           	opt stack 27
   465                           
   466                           ;ADC_Driver.c: 84: TRISBbits.TRISB2 = 0;
   467                           
   468                           ;incstack = 0
   469  007A5E  9493               	bcf	3987,2,c	;volatile
   470                           
   471                           ;ADC_Driver.c: 85: PORTBbits.RB2 = 1;
   472  007A60  8481               	bsf	3969,2,c	;volatile
   473                           
   474                           ;ADC_Driver.c: 88: D_SPI_Init(0, 5);
   475  007A62  0E05               	movlw	5
   476  007A64  6E02               	movwf	D_SPI_Init@mode,c
   477  007A66  0E00               	movlw	0
   478  007A68  EC46  F03E         	call	_D_SPI_Init
   479                           
   480                           ;ADC_Driver.c: 89: D_SPI_Enable(1);
   481  007A6C  0E01               	movlw	1
   482  007A6E  EC24  F03D         	call	_D_SPI_Enable
   483  007A72  0012               	return		;funcret
   484  007A74                     __end_of_D_ADC_Init:
   485                           	opt stack 0
   486                           tblptru	equ	0xFF8
   487                           
   488 ;; *************** function _D_SPI_Init *****************
   489 ;; Defined at:
   490 ;;		line 32 in file "Drivers/SPI_Driver.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  MS              1    wreg     unsigned char 
   493 ;;  mode            1    1[COMRAM] unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  MS              1    2[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   505 ;;      Params:         1       0       0       0       0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0       0       0
   508 ;;      Totals:         2       0       0       0       0       0       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		_D_SPI_Enable
   514 ;; This function is called by:
   515 ;;		_D_ADC_Init
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text4
   520  007C8C                     __ptext4:
   521                           	opt stack 0
   522  007C8C                     _D_SPI_Init:
   523                           	opt stack 27
   524                           
   525                           ;incstack = 0
   526                           ;D_SPI_Init@MS stored from wreg
   527  007C8C  6E03               	movwf	D_SPI_Init@MS,c
   528                           
   529                           ;SPI_Driver.c: 34: TRISBbits.TRISB1 = MS;
   530  007C8E  B003               	btfsc	D_SPI_Init@MS,0,c
   531  007C90  D002               	bra	u115
   532  007C92  9293               	bcf	3987,1,c	;volatile
   533  007C94  D001               	bra	u116
   534  007C96                     u115:
   535  007C96  8293               	bsf	3987,1,c	;volatile
   536  007C98                     u116:
   537                           
   538                           ;SPI_Driver.c: 35: TRISCbits.TRISC7 = 0;
   539  007C98  9E94               	bcf	3988,7,c	;volatile
   540                           
   541                           ;SPI_Driver.c: 36: TRISBbits.TRISB0 = 1;
   542  007C9A  8093               	bsf	3987,0,c	;volatile
   543                           
   544                           ;SPI_Driver.c: 39: SSPBUF = 0x00;
   545  007C9C  0E00               	movlw	0
   546  007C9E  6EC9               	movwf	4041,c	;volatile
   547                           
   548                           ;SPI_Driver.c: 42: D_SPI_Enable(0);
   549  007CA0  0E00               	movlw	0
   550  007CA2  EC24  F03D         	call	_D_SPI_Enable
   551                           
   552                           ;SPI_Driver.c: 44: switch(mode) {
   553  007CA6  D011               	goto	l919
   554  007CA8                     l18:
   555                           
   556                           ;SPI_Driver.c: 46: SSPSTATbits.SMP = 0;
   557  007CA8  9EC7               	bcf	4039,7,c	;volatile
   558                           
   559                           ;SPI_Driver.c: 47: SSPSTATbits.CKE = 1;
   560  007CAA  8CC7               	bsf	4039,6,c	;volatile
   561  007CAC  D002               	goto	L1
   562  007CAE                     l20:
   563                           
   564                           ;SPI_Driver.c: 51: SSPSTATbits.SMP = 1;
   565  007CAE  8EC7               	bsf	4039,7,c	;volatile
   566                           
   567                           ;SPI_Driver.c: 52: SSPSTATbits.CKE = 0;
   568  007CB0  9CC7               	bcf	4039,6,c	;volatile
   569  007CB2                     L1:
   570                           
   571                           ;SPI_Driver.c: 53: SSPCON1bits.CKP = 0;
   572  007CB2  98C6               	bcf	4038,4,c	;volatile
   573                           
   574                           ;SPI_Driver.c: 54: break;
   575  007CB4  D018               	goto	l921
   576  007CB6                     l21:
   577                           
   578                           ;SPI_Driver.c: 56: SSPSTATbits.SMP = 0;
   579  007CB6  9EC7               	bcf	4039,7,c	;volatile
   580                           
   581                           ;SPI_Driver.c: 57: SSPSTATbits.CKE = 1;
   582  007CB8  8CC7               	bsf	4039,6,c	;volatile
   583  007CBA  D002               	goto	L2
   584  007CBC                     l22:
   585                           
   586                           ;SPI_Driver.c: 61: SSPSTATbits.SMP = 1;
   587  007CBC  8EC7               	bsf	4039,7,c	;volatile
   588  007CBE  D003               	goto	L3
   589  007CC0                     L2:
   590                           
   591                           ;SPI_Driver.c: 63: SSPCON1bits.CKP = 1;
   592  007CC0  88C6               	bsf	4038,4,c	;volatile
   593                           
   594                           ;SPI_Driver.c: 64: break;
   595  007CC2  D011               	goto	l921
   596  007CC4                     l23:
   597                           
   598                           ;SPI_Driver.c: 66: SSPSTATbits.SMP = 0;
   599  007CC4  9EC7               	bcf	4039,7,c	;volatile
   600  007CC6                     L3:
   601                           
   602                           ;SPI_Driver.c: 67: SSPSTATbits.CKE = 0;
   603  007CC6  9CC7               	bcf	4039,6,c	;volatile
   604  007CC8  D7FB               	goto	L2
   605  007CCA                     l919:
   606  007CCA  5002               	movf	D_SPI_Init@mode,w,c
   607                           
   608                           ; Switch size 1, requested type "space"
   609                           ; Number of cases is 4, Range of values is 0 to 3
   610                           ; switch strategies available:
   611                           ; Name         Instructions Cycles
   612                           ; simple_byte           13     7 (average)
   613                           ;	Chosen strategy is simple_byte
   614  007CCC  0A00               	xorlw	0	; case 0
   615  007CCE  B4D8               	btfsc	status,2,c
   616  007CD0  D7EB               	goto	l18
   617  007CD2  0A01               	xorlw	1	; case 1
   618  007CD4  B4D8               	btfsc	status,2,c
   619  007CD6  D7EB               	goto	l20
   620  007CD8  0A03               	xorlw	3	; case 2
   621  007CDA  B4D8               	btfsc	status,2,c
   622  007CDC  D7EC               	goto	l21
   623  007CDE  0A01               	xorlw	1	; case 3
   624  007CE0  B4D8               	btfsc	status,2,c
   625  007CE2  D7EC               	goto	l22
   626  007CE4  D7EF               	goto	l23
   627  007CE6                     l921:
   628                           
   629                           ;SPI_Driver.c: 73: if (MS) {
   630  007CE6  5003               	movf	D_SPI_Init@MS,w,c
   631  007CE8  B4D8               	btfsc	status,2,c
   632  007CEA  D004               	goto	l925
   633                           
   634                           ;SPI_Driver.c: 74: SSPCON1bits.SSPM = 0b1010;
   635  007CEC  50C6               	movf	4038,w,c	;volatile
   636  007CEE  0BF0               	andlw	-16
   637  007CF0  090A               	iorlw	10
   638  007CF2  D003               	goto	L4
   639  007CF4                     l925:
   640                           
   641                           ;SPI_Driver.c: 76: SSPCON1bits.SSPM = 0b0010;
   642  007CF4  50C6               	movf	4038,w,c	;volatile
   643  007CF6  0BF0               	andlw	-16
   644  007CF8  0902               	iorlw	2
   645  007CFA                     L4:
   646  007CFA  6EC6               	movwf	4038,c	;volatile
   647                           
   648                           ;SPI_Driver.c: 77: }
   649                           ;SPI_Driver.c: 80: PIR1bits.SSPIF = 0;
   650  007CFC  969E               	bcf	3998,3,c	;volatile
   651  007CFE  0012               	return		;funcret
   652  007D00                     __end_of_D_SPI_Init:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _D_SPI_Enable *****************
   658 ;; Defined at:
   659 ;;		line 96 in file "Drivers/SPI_Driver.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  enable          1    wreg     unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  enable          1    0[COMRAM] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   673 ;;      Params:         0       0       0       0       0       0       0       0       0
   674 ;;      Locals:         1       0       0       0       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0
   676 ;;      Totals:         1       0       0       0       0       0       0       0       0
   677 ;;Total ram usage:        1 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_D_SPI_Init
   683 ;;		_D_ADC_Init
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text5
   688  007A48                     __ptext5:
   689                           	opt stack 0
   690  007A48                     _D_SPI_Enable:
   691                           	opt stack 27
   692                           
   693                           ;incstack = 0
   694                           ;D_SPI_Enable@enable stored from wreg
   695  007A48  6E01               	movwf	D_SPI_Enable@enable,c
   696                           
   697                           ;SPI_Driver.c: 97: if (enable) {
   698  007A4A  5001               	movf	D_SPI_Enable@enable,w,c
   699  007A4C  B4D8               	btfsc	status,2,c
   700  007A4E  D005               	goto	l38
   701                           
   702                           ;SPI_Driver.c: 98: TRISBbits.TRISB1 = 0;
   703  007A50  9293               	bcf	3987,1,c	;volatile
   704                           
   705                           ;SPI_Driver.c: 99: TRISCbits.TRISC7 = 0;
   706  007A52  9E94               	bcf	3988,7,c	;volatile
   707                           
   708                           ;SPI_Driver.c: 100: TRISBbits.TRISB0 = 1;
   709  007A54  8093               	bsf	3987,0,c	;volatile
   710                           
   711                           ;SPI_Driver.c: 101: SSPCON1bits.SSPEN = 1;
   712  007A56  8AC6               	bsf	4038,5,c	;volatile
   713                           
   714                           ;SPI_Driver.c: 102: } else {
   715  007A58  0012               	return	
   716  007A5A                     l38:
   717                           
   718                           ;SPI_Driver.c: 103: SSPCON1bits.SSPEN = 0;
   719  007A5A  9AC6               	bcf	4038,5,c	;volatile
   720  007A5C  0012               	return	
   721  007A5E                     __end_of_D_SPI_Enable:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           status	equ	0xFD8
   725                           
   726 ;; *************** function _delay1000ms *****************
   727 ;; Defined at:
   728 ;;		line 40 in file "main.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  d               1    wreg     unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  d               1    5[COMRAM] unsigned char 
   733 ;;  i               1    6[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         2       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         2       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        2 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		_delay100ms
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text6
   758  007A8E                     __ptext6:
   759                           	opt stack 0
   760  007A8E                     _delay1000ms:
   761                           	opt stack 28
   762                           
   763                           ;incstack = 0
   764                           ;delay1000ms@d stored from wreg
   765  007A8E  6E06               	movwf	delay1000ms@d,c
   766                           
   767                           ;main.c: 41: uint8_t i = 0;
   768  007A90  0E00               	movlw	0
   769  007A92  6E07               	movwf	delay1000ms@i,c
   770                           
   771                           ;main.c: 42: while(i < d) {
   772  007A94  D004               	goto	l893
   773  007A96                     l889:
   774                           
   775                           ;main.c: 43: delay100ms(10);
   776  007A96  0E0A               	movlw	10
   777  007A98  EC3A  F03D         	call	_delay100ms
   778                           
   779                           ;main.c: 44: i++;
   780  007A9C  2A07               	incf	delay1000ms@i,f,c
   781  007A9E                     l893:
   782  007A9E  5006               	movf	delay1000ms@d,w,c
   783  007AA0  5C07               	subwf	delay1000ms@i,w,c
   784  007AA2  B0D8               	btfsc	status,0,c
   785  007AA4  0012               	return	
   786  007AA6  D7F7               	goto	l889
   787  007AA8                     __end_of_delay1000ms:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _delay100ms *****************
   793 ;; Defined at:
   794 ;;		line 32 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  d               1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  d               1    3[COMRAM] unsigned char 
   799 ;;  i               1    4[COMRAM] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   809 ;;      Params:         0       0       0       0       0       0       0       0       0
   810 ;;      Locals:         2       0       0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0
   812 ;;      Totals:         2       0       0       0       0       0       0       0       0
   813 ;;Total ram usage:        2 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		_delay10ms
   818 ;; This function is called by:
   819 ;;		_delay1000ms
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text7
   824  007A74                     __ptext7:
   825                           	opt stack 0
   826  007A74                     _delay100ms:
   827                           	opt stack 28
   828                           
   829                           ;incstack = 0
   830                           ;delay100ms@d stored from wreg
   831  007A74  6E04               	movwf	delay100ms@d,c
   832                           
   833                           ;main.c: 33: uint8_t i = 0;
   834  007A76  0E00               	movlw	0
   835  007A78  6E05               	movwf	delay100ms@i,c
   836                           
   837                           ;main.c: 34: while(i < d) {
   838  007A7A  D004               	goto	l871
   839  007A7C                     l867:
   840                           
   841                           ;main.c: 35: delay10ms(10);
   842  007A7C  0E0A               	movlw	10
   843  007A7E  EC71  F03D         	call	_delay10ms
   844                           
   845                           ;main.c: 36: i++;
   846  007A82  2A05               	incf	delay100ms@i,f,c
   847  007A84                     l871:
   848  007A84  5004               	movf	delay100ms@d,w,c
   849  007A86  5C05               	subwf	delay100ms@i,w,c
   850  007A88  B0D8               	btfsc	status,0,c
   851  007A8A  0012               	return	
   852  007A8C  D7F7               	goto	l867
   853  007A8E                     __end_of_delay100ms:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           status	equ	0xFD8
   857                           
   858 ;; *************** function _delay10ms *****************
   859 ;; Defined at:
   860 ;;		line 24 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  d               1    wreg     unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  d               1    1[COMRAM] unsigned char 
   865 ;;  i               1    2[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         0       0       0       0       0       0       0       0       0
   876 ;;      Locals:         2       0       0       0       0       0       0       0       0
   877 ;;      Temps:          1       0       0       0       0       0       0       0       0
   878 ;;      Totals:         3       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        3 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_delay100ms
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text8
   889  007AE2                     __ptext8:
   890                           	opt stack 0
   891  007AE2                     _delay10ms:
   892                           	opt stack 28
   893                           
   894                           ;incstack = 0
   895                           ;delay10ms@d stored from wreg
   896  007AE2  6E02               	movwf	delay10ms@d,c
   897                           
   898                           ;main.c: 25: uint8_t i = 0;
   899  007AE4  0E00               	movlw	0
   900  007AE6  6E03               	movwf	delay10ms@i,c
   901                           
   902                           ;main.c: 26: while(i < d) {
   903  007AE8  D008               	goto	l805
   904  007AEA                     l801:
   905                           
   906                           ;main.c: 27: _delay((unsigned long)((10)*(16000000/4000.0)));
   907  007AEA  0E34               	movlw	52
   908  007AEC  6E01               	movwf	??_delay10ms& (0+255),c
   909  007AEE  0EF2               	movlw	242
   910  007AF0                     u167:
   911  007AF0  2EE8               	decfsz	wreg,f,c
   912  007AF2  D7FE               	bra	u167
   913  007AF4  2E01               	decfsz	??_delay10ms& (0+255),f,c
   914  007AF6  D7FC               	bra	u167
   915                           
   916                           ;main.c: 28: i++;
   917  007AF8  2A03               	incf	delay10ms@i,f,c
   918  007AFA                     l805:
   919  007AFA  5002               	movf	delay10ms@d,w,c
   920  007AFC  5C03               	subwf	delay10ms@i,w,c
   921  007AFE  B0D8               	btfsc	status,0,c
   922  007B00  0012               	return	
   923  007B02  D7F3               	goto	l801
   924  007B04                     __end_of_delay10ms:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           wreg	equ	0xFE8
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _D_ADC_WriteRegister *****************
   931 ;; Defined at:
   932 ;;		line 107 in file "Drivers/ADC_Driver.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  addr            1    wreg     unsigned char 
   935 ;;  data            1   17[COMRAM] unsigned char 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  addr            1   18[COMRAM] unsigned char 
   938 ;;  transaction     6   19[COMRAM] struct .
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         1       0       0       0       0       0       0       0       0
   949 ;;      Locals:         7       0       0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0
   951 ;;      Totals:         8       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:        8 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		_constructTransaction1
   957 ;;		_constructTransaction2
   958 ;;		_writeTransaction
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text9
   965  007BE0                     __ptext9:
   966                           	opt stack 0
   967  007BE0                     _D_ADC_WriteRegister:
   968                           	opt stack 28
   969                           
   970                           ;incstack = 0
   971                           ;D_ADC_WriteRegister@addr stored from wreg
   972  007BE0  6E13               	movwf	D_ADC_WriteRegister@addr,c
   973                           
   974                           ;ADC_Driver.c: 108: transaction_t transaction;
   975                           ;ADC_Driver.c: 109: transaction.transaction1 = constructTransaction1(0x10, ((addr >> 4) 
      +                          & 0x07));
   976  007BE2  3813               	swapf	D_ADC_WriteRegister@addr,w,c
   977  007BE4  0B0F               	andlw	15
   978  007BE6  0B07               	andlw	7
   979  007BE8  6E01               	movwf	constructTransaction1@uab,c
   980  007BEA  0E10               	movlw	16
   981  007BEC  EC19  F03D         	call	_constructTransaction1
   982  007BF0  C001  F014         	movff	?_constructTransaction1,D_ADC_WriteRegister@transaction
   983  007BF4  C002  F015         	movff	?_constructTransaction1+1,D_ADC_WriteRegister@transaction+1
   984                           
   985                           ;ADC_Driver.c: 110: transaction.transaction2 = constructTransaction2(data, 0x00, 0x00, (
      +                          addr & 0x0F));
   986  007BF8  0E00               	movlw	0
   987  007BFA  6E08               	movwf	constructTransaction2@rwb,c
   988  007BFC  0E00               	movlw	0
   989  007BFE  6E09               	movwf	constructTransaction2@sz,c
   990  007C00  5013               	movf	D_ADC_WriteRegister@addr,w,c
   991  007C02  0B0F               	andlw	15
   992  007C04  6E0A               	movwf	constructTransaction2@lra,c
   993  007C06  5012               	movf	D_ADC_WriteRegister@data,w,c
   994  007C08  EC99  F03D         	call	_constructTransaction2
   995  007C0C  C008  F016         	movff	?_constructTransaction2,D_ADC_WriteRegister@transaction+2
   996  007C10  C009  F017         	movff	?_constructTransaction2+1,D_ADC_WriteRegister@transaction+3
   997  007C14  C00A  F018         	movff	?_constructTransaction2+2,D_ADC_WriteRegister@transaction+4
   998  007C18  C00B  F019         	movff	?_constructTransaction2+3,D_ADC_WriteRegister@transaction+5
   999                           
  1000                           ;ADC_Driver.c: 111: writeTransaction(transaction);
  1001  007C1C  EE20  F014         	lfsr	2,D_ADC_WriteRegister@transaction
  1002  007C20  EE00  F00B         	lfsr	0,writeTransaction@t
  1003  007C24  0E05               	movlw	5
  1004  007C26                     u151:
  1005  007C26  CFDB FFEB          	movff	plusw2,plusw0
  1006  007C2A  06E8               	decf	wreg,f,c
  1007  007C2C  E2FC               	bc	u151
  1008  007C2E  ECB2  F03D         	call	_writeTransaction	;wreg free
  1009  007C32  0012               	return		;funcret
  1010  007C34                     __end_of_D_ADC_WriteRegister:
  1011                           	opt stack 0
  1012                           tblptru	equ	0xFF8
  1013                           plusw0	equ	0xFEB
  1014                           wreg	equ	0xFE8
  1015                           plusw2	equ	0xFDB
  1016                           status	equ	0xFD8
  1017                           
  1018 ;; *************** function _D_ADC_ReadRegister *****************
  1019 ;; Defined at:
  1020 ;;		line 99 in file "Drivers/ADC_Driver.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  addr            1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  addr            1   18[COMRAM] unsigned char 
  1025 ;;  transaction     6   19[COMRAM] struct .
  1026 ;;  data            1   17[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        8 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    2
  1043 ;; This function calls:
  1044 ;;		_constructTransaction1
  1045 ;;		_constructTransaction2
  1046 ;;		_writeTransaction
  1047 ;; This function is called by:
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text10
  1053  007C34                     __ptext10:
  1054                           	opt stack 0
  1055  007C34                     _D_ADC_ReadRegister:
  1056                           	opt stack 28
  1057                           
  1058                           ;incstack = 0
  1059                           ;D_ADC_ReadRegister@addr stored from wreg
  1060  007C34  6E13               	movwf	D_ADC_ReadRegister@addr,c
  1061                           
  1062                           ;ADC_Driver.c: 100: uint8_t data = 0x00;
  1063  007C36  0E00               	movlw	0
  1064  007C38  6E12               	movwf	D_ADC_ReadRegister@data,c
  1065                           
  1066                           ;ADC_Driver.c: 101: transaction_t transaction;
  1067                           ;ADC_Driver.c: 102: transaction.transaction1 = constructTransaction1(0x10, ((addr >> 4) 
      +                          & 0x07));
  1068  007C3A  3813               	swapf	D_ADC_ReadRegister@addr,w,c
  1069  007C3C  0B0F               	andlw	15
  1070  007C3E  0B07               	andlw	7
  1071  007C40  6E01               	movwf	constructTransaction1@uab,c
  1072  007C42  0E10               	movlw	16
  1073  007C44  EC19  F03D         	call	_constructTransaction1
  1074  007C48  C001  F014         	movff	?_constructTransaction1,D_ADC_ReadRegister@transaction
  1075  007C4C  C002  F015         	movff	?_constructTransaction1+1,D_ADC_ReadRegister@transaction+1
  1076                           
  1077                           ;ADC_Driver.c: 103: transaction.transaction2 = constructTransaction2(data, 0x01, 0x00, (
      +                          addr & 0x0F));
  1078  007C50  0E01               	movlw	1
  1079  007C52  6E08               	movwf	constructTransaction2@rwb,c
  1080  007C54  0E00               	movlw	0
  1081  007C56  6E09               	movwf	constructTransaction2@sz,c
  1082  007C58  5013               	movf	D_ADC_ReadRegister@addr,w,c
  1083  007C5A  0B0F               	andlw	15
  1084  007C5C  6E0A               	movwf	constructTransaction2@lra,c
  1085  007C5E  5012               	movf	D_ADC_ReadRegister@data,w,c
  1086  007C60  EC99  F03D         	call	_constructTransaction2
  1087  007C64  C008  F016         	movff	?_constructTransaction2,D_ADC_ReadRegister@transaction+2
  1088  007C68  C009  F017         	movff	?_constructTransaction2+1,D_ADC_ReadRegister@transaction+3
  1089  007C6C  C00A  F018         	movff	?_constructTransaction2+2,D_ADC_ReadRegister@transaction+4
  1090  007C70  C00B  F019         	movff	?_constructTransaction2+3,D_ADC_ReadRegister@transaction+5
  1091                           
  1092                           ;ADC_Driver.c: 104: return writeTransaction(transaction);
  1093  007C74  EE20  F014         	lfsr	2,D_ADC_ReadRegister@transaction
  1094  007C78  EE00  F00B         	lfsr	0,writeTransaction@t
  1095  007C7C  0E05               	movlw	5
  1096  007C7E                     u141:
  1097  007C7E  CFDB FFEB          	movff	plusw2,plusw0
  1098  007C82  06E8               	decf	wreg,f,c
  1099  007C84  E2FC               	bc	u141
  1100  007C86  ECB2  F03D         	call	_writeTransaction	;wreg free
  1101  007C8A  0012               	return	
  1102  007C8C                     __end_of_D_ADC_ReadRegister:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           plusw0	equ	0xFEB
  1106                           wreg	equ	0xFE8
  1107                           plusw2	equ	0xFDB
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _writeTransaction *****************
  1111 ;; Defined at:
  1112 ;;		line 65 in file "Drivers/ADC_Driver.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  t               6   10[COMRAM] struct .
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  input           1   16[COMRAM] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      unsigned char 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         6       0       0       0       0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1129 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        7 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    1
  1133 ;; This function calls:
  1134 ;;		_D_SPI_Write
  1135 ;;		_inst2ToByte
  1136 ;; This function is called by:
  1137 ;;		_D_ADC_ReadRegister
  1138 ;;		_D_ADC_WriteRegister
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text11
  1143  007B64                     __ptext11:
  1144                           	opt stack 0
  1145  007B64                     _writeTransaction:
  1146                           	opt stack 28
  1147                           
  1148                           ;ADC_Driver.c: 66: uint8_t input = 0;
  1149                           
  1150                           ;incstack = 0
  1151  007B64  0E00               	movlw	0
  1152  007B66  6E11               	movwf	writeTransaction@input,c
  1153                           
  1154                           ;ADC_Driver.c: 68: PORTBbits.RB2 = 0;
  1155  007B68  9481               	bcf	3969,2,c	;volatile
  1156                           
  1157                           ;ADC_Driver.c: 69: D_SPI_Write(t.transaction1.INST1);
  1158  007B6A  500B               	movf	writeTransaction@t,w,c
  1159  007B6C  EC11  F03D         	call	_D_SPI_Write
  1160                           
  1161                           ;ADC_Driver.c: 70: D_SPI_Write(t.transaction1.UAB);
  1162  007B70  500C               	movf	writeTransaction@t+1,w,c
  1163  007B72  EC11  F03D         	call	_D_SPI_Write
  1164                           
  1165                           ;ADC_Driver.c: 72: D_SPI_Write(inst2ToByte(t.transaction2.INST2));
  1166  007B76  C00D  F001         	movff	writeTransaction@t+2,inst2ToByte@inst2
  1167  007B7A  C00E  F002         	movff	writeTransaction@t+3,inst2ToByte@inst2+1
  1168  007B7E  C00F  F003         	movff	writeTransaction@t+4,inst2ToByte@inst2+2
  1169  007B82  ECCC  F03D         	call	_inst2ToByte	;wreg free
  1170  007B86  EC11  F03D         	call	_D_SPI_Write
  1171                           
  1172                           ;ADC_Driver.c: 73: input = D_SPI_Write(t.transaction2.DataByte);
  1173  007B8A  5010               	movf	writeTransaction@t+5,w,c
  1174  007B8C  EC11  F03D         	call	_D_SPI_Write
  1175  007B90  6E11               	movwf	writeTransaction@input,c
  1176                           
  1177                           ;ADC_Driver.c: 74: PORTBbits.RB2 = 1;
  1178  007B92  8481               	bsf	3969,2,c	;volatile
  1179                           
  1180                           ;ADC_Driver.c: 76: return input;
  1181  007B94  5011               	movf	writeTransaction@input,w,c
  1182  007B96  0012               	return	
  1183  007B98                     __end_of_writeTransaction:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           plusw0	equ	0xFEB
  1187                           wreg	equ	0xFE8
  1188                           plusw2	equ	0xFDB
  1189                           status	equ	0xFD8
  1190                           
  1191 ;; *************** function _inst2ToByte *****************
  1192 ;; Defined at:
  1193 ;;		line 35 in file "Drivers/ADC_Driver.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  inst2           3    0[COMRAM] struct .
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  c               1    9[COMRAM] unsigned char 
  1198 ;;  b               1    8[COMRAM] unsigned char 
  1199 ;;  a               1    7[COMRAM] unsigned char 
  1200 ;;  d               1    6[COMRAM] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      unsigned char 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         3       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1213 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:       10 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_writeTransaction
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text12
  1224  007B98                     __ptext12:
  1225                           	opt stack 0
  1226  007B98                     _inst2ToByte:
  1227                           	opt stack 28
  1228                           
  1229                           ;ADC_Driver.c: 36: uint8_t a = ((inst2.R_WB << 7) & 0x80);
  1230                           
  1231                           ;incstack = 0
  1232  007B98  4001               	rrncf	inst2ToByte@inst2,w,c
  1233  007B9A  0B80               	andlw	128
  1234  007B9C  0B80               	andlw	128
  1235  007B9E  6E08               	movwf	inst2ToByte@a,c
  1236                           
  1237                           ;ADC_Driver.c: 37: uint8_t b = ((inst2.SZ << 5) & 0x60);
  1238  007BA0  3802               	swapf	inst2ToByte@inst2+1,w,c
  1239  007BA2  46E8               	rlncf	wreg,f,c
  1240  007BA4  0BE0               	andlw	224
  1241  007BA6  0B60               	andlw	96
  1242  007BA8  6E09               	movwf	inst2ToByte@b,c
  1243                           
  1244                           ;ADC_Driver.c: 38: uint8_t c = ((inst2.LRA) & 0x0F);
  1245  007BAA  5003               	movf	inst2ToByte@inst2+2,w,c
  1246  007BAC  0B0F               	andlw	15
  1247  007BAE  6E0A               	movwf	inst2ToByte@c,c
  1248                           
  1249                           ;ADC_Driver.c: 39: uint8_t d = a + b + c;
  1250  007BB0  5008               	movf	inst2ToByte@a,w,c
  1251  007BB2  2409               	addwf	inst2ToByte@b,w,c
  1252  007BB4  240A               	addwf	inst2ToByte@c,w,c
  1253  007BB6  6E07               	movwf	inst2ToByte@d,c
  1254                           
  1255                           ;ADC_Driver.c: 40: return ((inst2.R_WB << 7) & 0x80) + ((inst2.SZ << 5) & 0x60) + ((inst
      +                          2.LRA) & 0x0F);
  1256  007BB8  C003  F004         	movff	inst2ToByte@inst2+2,??_inst2ToByte
  1257  007BBC  0E0F               	movlw	15
  1258  007BBE  1604               	andwf	??_inst2ToByte,f,c
  1259  007BC0  C002  F005         	movff	inst2ToByte@inst2+1,??_inst2ToByte+1
  1260  007BC4  0E05               	movlw	5
  1261  007BC6  6E06               	movwf	(??_inst2ToByte+2)& (0+255),c
  1262  007BC8                     u135:
  1263  007BC8  90D8               	bcf	status,0,c
  1264  007BCA  3605               	rlcf	??_inst2ToByte+1,f,c
  1265  007BCC  2E06               	decfsz	(??_inst2ToByte+2)& (0+255),f,c
  1266  007BCE  D7FC               	goto	u135
  1267  007BD0  0E60               	movlw	96
  1268  007BD2  1605               	andwf	??_inst2ToByte+1,f,c
  1269  007BD4  4001               	rrncf	inst2ToByte@inst2,w,c
  1270  007BD6  0B80               	andlw	128
  1271  007BD8  0B80               	andlw	128
  1272  007BDA  2405               	addwf	??_inst2ToByte+1,w,c
  1273  007BDC  2404               	addwf	??_inst2ToByte,w,c
  1274  007BDE  0012               	return	
  1275  007BE0                     __end_of_inst2ToByte:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           plusw0	equ	0xFEB
  1279                           wreg	equ	0xFE8
  1280                           plusw2	equ	0xFDB
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _D_SPI_Write *****************
  1284 ;; Defined at:
  1285 ;;		line 83 in file "Drivers/SPI_Driver.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  data            1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  data            1    0[COMRAM] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      unsigned char 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0
  1300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_writeTransaction
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text13
  1313  007A22                     __ptext13:
  1314                           	opt stack 0
  1315  007A22                     _D_SPI_Write:
  1316                           	opt stack 28
  1317                           
  1318                           ;incstack = 0
  1319                           ;D_SPI_Write@data stored from wreg
  1320  007A22  6E01               	movwf	D_SPI_Write@data,c
  1321                           
  1322                           ;SPI_Driver.c: 84: SSPBUF = data;
  1323  007A24  C001  FFC9         	movff	D_SPI_Write@data,4041	;volatile
  1324  007A28                     l29:
  1325  007A28  A69E               	btfss	3998,3,c	;volatile
  1326  007A2A  D7FE               	goto	l29
  1327                           
  1328                           ;SPI_Driver.c: 86: PIR1bits.SSPIF = 0;
  1329  007A2C  969E               	bcf	3998,3,c	;volatile
  1330                           
  1331                           ;SPI_Driver.c: 87: return SSPBUF;
  1332  007A2E  50C9               	movf	4041,w,c	;volatile
  1333  007A30  0012               	return		;funcret
  1334  007A32                     __end_of_D_SPI_Write:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           plusw0	equ	0xFEB
  1338                           wreg	equ	0xFE8
  1339                           plusw2	equ	0xFDB
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _constructTransaction2 *****************
  1343 ;; Defined at:
  1344 ;;		line 58 in file "Drivers/ADC_Driver.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  db              1    wreg     unsigned char 
  1347 ;;  rwb             1    7[COMRAM] unsigned char 
  1348 ;;  sz              1    8[COMRAM] unsigned char 
  1349 ;;  lra             1    9[COMRAM] unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  db              1   11[COMRAM] unsigned char 
  1352 ;;  transaction2    4   12[COMRAM] struct .
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  4    7[COMRAM] struct .
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1362 ;;      Params:         4       0       0       0       0       0       0       0       0
  1363 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1365 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1366 ;;Total ram usage:        9 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    1
  1369 ;; This function calls:
  1370 ;;		_contructInstruction2Byte
  1371 ;; This function is called by:
  1372 ;;		_D_ADC_ReadRegister
  1373 ;;		_D_ADC_WriteRegister
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text14
  1378  007B32                     __ptext14:
  1379                           	opt stack 0
  1380  007B32                     _constructTransaction2:
  1381                           	opt stack 28
  1382                           
  1383                           ;incstack = 0
  1384                           ;constructTransaction2@db stored from wreg
  1385  007B32  6E0C               	movwf	constructTransaction2@db,c
  1386                           
  1387                           ;ADC_Driver.c: 59: transaction2_t transaction2;
  1388                           ;ADC_Driver.c: 60: transaction2.INST2 = contructInstruction2Byte(rwb, sz, lra);
  1389  007B34  C009  F001         	movff	constructTransaction2@sz,contructInstruction2Byte@sz
  1390  007B38  C00A  F002         	movff	constructTransaction2@lra,contructInstruction2Byte@lra
  1391  007B3C  5008               	movf	constructTransaction2@rwb,w,c
  1392  007B3E  EC54  F03D         	call	_contructInstruction2Byte
  1393  007B42  C001  F00D         	movff	?_contructInstruction2Byte,constructTransaction2@transaction2
  1394  007B46  C002  F00E         	movff	?_contructInstruction2Byte+1,constructTransaction2@transaction2+1
  1395  007B4A  C003  F00F         	movff	?_contructInstruction2Byte+2,constructTransaction2@transaction2+2
  1396                           
  1397                           ;ADC_Driver.c: 61: transaction2.DataByte = db;
  1398  007B4E  C00C  F010         	movff	constructTransaction2@db,constructTransaction2@transaction2+3
  1399                           
  1400                           ;ADC_Driver.c: 62: return transaction2;
  1401  007B52  C00D  F008         	movff	constructTransaction2@transaction2,?_constructTransaction2
  1402  007B56  C00E  F009         	movff	constructTransaction2@transaction2+1,?_constructTransaction2+1
  1403  007B5A  C00F  F00A         	movff	constructTransaction2@transaction2+2,?_constructTransaction2+2
  1404  007B5E  C010  F00B         	movff	constructTransaction2@transaction2+3,?_constructTransaction2+3
  1405  007B62  0012               	return	
  1406  007B64                     __end_of_constructTransaction2:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           plusw0	equ	0xFEB
  1410                           wreg	equ	0xFE8
  1411                           plusw2	equ	0xFDB
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _contructInstruction2Byte *****************
  1415 ;; Defined at:
  1416 ;;		line 43 in file "Drivers/ADC_Driver.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  rwb             1    wreg     unsigned char 
  1419 ;;  sz              1    0[COMRAM] unsigned char 
  1420 ;;  lra             1    1[COMRAM] unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  rwb             1    3[COMRAM] unsigned char 
  1423 ;;  inst2           3    4[COMRAM] struct .
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  3    0[COMRAM] struct .
  1426 ;; Registers used:
  1427 ;;		wreg
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         3       0       0       0       0       0       0       0       0
  1434 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1436 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:        7 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_constructTransaction2
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text15
  1447  007AA8                     __ptext15:
  1448                           	opt stack 0
  1449  007AA8                     _contructInstruction2Byte:
  1450                           	opt stack 28
  1451                           
  1452                           ;incstack = 0
  1453                           ;contructInstruction2Byte@rwb stored from wreg
  1454  007AA8  6E04               	movwf	contructInstruction2Byte@rwb,c
  1455                           
  1456                           ;ADC_Driver.c: 44: INST2_t inst2;
  1457                           ;ADC_Driver.c: 45: inst2.R_WB = rwb;
  1458  007AAA  C004  F005         	movff	contructInstruction2Byte@rwb,contructInstruction2Byte@inst2
  1459                           
  1460                           ;ADC_Driver.c: 46: inst2.SZ = sz;
  1461  007AAE  C001  F006         	movff	contructInstruction2Byte@sz,contructInstruction2Byte@inst2+1
  1462                           
  1463                           ;ADC_Driver.c: 47: inst2.LRA = lra;
  1464  007AB2  C002  F007         	movff	contructInstruction2Byte@lra,contructInstruction2Byte@inst2+2
  1465                           
  1466                           ;ADC_Driver.c: 48: return inst2;
  1467  007AB6  C005  F001         	movff	contructInstruction2Byte@inst2,?_contructInstruction2Byte
  1468  007ABA  C006  F002         	movff	contructInstruction2Byte@inst2+1,?_contructInstruction2Byte+1
  1469  007ABE  C007  F003         	movff	contructInstruction2Byte@inst2+2,?_contructInstruction2Byte+2
  1470  007AC2  0012               	return	
  1471  007AC4                     __end_of_contructInstruction2Byte:
  1472                           	opt stack 0
  1473                           tblptru	equ	0xFF8
  1474                           plusw0	equ	0xFEB
  1475                           wreg	equ	0xFE8
  1476                           plusw2	equ	0xFDB
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _constructTransaction1 *****************
  1480 ;; Defined at:
  1481 ;;		line 51 in file "Drivers/ADC_Driver.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  rw              1    wreg     unsigned char 
  1484 ;;  uab             1    0[COMRAM] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  rw              1    2[COMRAM] unsigned char 
  1487 ;;  transaction1    2    3[COMRAM] struct .
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2    0[COMRAM] struct .
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         2       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        5 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_D_ADC_ReadRegister
  1507 ;;		_D_ADC_WriteRegister
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text16
  1512  007A32                     __ptext16:
  1513                           	opt stack 0
  1514  007A32                     _constructTransaction1:
  1515                           	opt stack 29
  1516                           
  1517                           ;incstack = 0
  1518                           ;constructTransaction1@rw stored from wreg
  1519  007A32  6E03               	movwf	constructTransaction1@rw,c
  1520                           
  1521                           ;ADC_Driver.c: 52: transaction1_t transaction1;
  1522                           ;ADC_Driver.c: 53: transaction1.INST1 = rw;
  1523  007A34  C003  F004         	movff	constructTransaction1@rw,constructTransaction1@transaction1
  1524                           
  1525                           ;ADC_Driver.c: 54: transaction1.UAB = (uab & 0x07);
  1526  007A38  5001               	movf	constructTransaction1@uab,w,c
  1527  007A3A  0B07               	andlw	7
  1528  007A3C  6E05               	movwf	constructTransaction1@transaction1+1,c
  1529                           
  1530                           ;ADC_Driver.c: 55: return transaction1;
  1531  007A3E  C004  F001         	movff	constructTransaction1@transaction1,?_constructTransaction1
  1532  007A42  C005  F002         	movff	constructTransaction1@transaction1+1,?_constructTransaction1+1
  1533  007A46  0012               	return	
  1534  007A48                     __end_of_constructTransaction1:
  1535                           	opt stack 0
  1536  0000                     tblptru	equ	0xFF8
  1537                           plusw0	equ	0xFEB
  1538                           wreg	equ	0xFE8
  1539                           plusw2	equ	0xFDB
  1540                           status	equ	0xFD8
  1541                           tblptru	equ	0xFF8
  1542                           plusw0	equ	0xFEB
  1543                           wreg	equ	0xFE8
  1544                           plusw2	equ	0xFDB
  1545                           status	equ	0xFD8
  1546                           
  1547                           	psect	rparam
  1548  0000                     tblptru	equ	0xFF8
  1549                           plusw0	equ	0xFEB
  1550                           wreg	equ	0xFE8
  1551                           plusw2	equ	0xFDB
  1552                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_D_ADC_ReadRegister
    _main->_D_ADC_WriteRegister
    _D_ADC_Init->_D_SPI_Init
    _D_SPI_Init->_D_SPI_Enable
    _delay1000ms->_delay100ms
    _delay100ms->_delay10ms
    _D_ADC_WriteRegister->_writeTransaction
    _D_ADC_ReadRegister->_writeTransaction
    _writeTransaction->_inst2ToByte
    _constructTransaction2->_contructInstruction2Byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3940
                                             25 COMRAM     1     1      0
                 _D_ADC_ReadRegister
                _D_ADC_WriteRegister
                        _delay1000ms
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     172
                         _D_ADC_Init
                        _D_PORT_Init
 ---------------------------------------------------------------------------------
 (2) _D_PORT_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D_ADC_Init                                           0     0      0     172
                       _D_SPI_Enable
                         _D_SPI_Init
 ---------------------------------------------------------------------------------
 (3) _D_SPI_Init                                           2     1      1     157
                                              1 COMRAM     2     1      1
                       _D_SPI_Enable
 ---------------------------------------------------------------------------------
 (4) _D_SPI_Enable                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay1000ms                                          2     2      0      90
                                              5 COMRAM     2     2      0
                         _delay100ms
 ---------------------------------------------------------------------------------
 (2) _delay100ms                                           2     2      0      60
                                              3 COMRAM     2     2      0
                          _delay10ms
 ---------------------------------------------------------------------------------
 (3) _delay10ms                                            3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _D_ADC_WriteRegister                                  8     7      1    1876
                                             17 COMRAM     8     7      1
              _constructTransaction1
              _constructTransaction2
                   _writeTransaction
 ---------------------------------------------------------------------------------
 (1) _D_ADC_ReadRegister                                   8     8      0    1801
                                             17 COMRAM     8     8      0
              _constructTransaction1
              _constructTransaction2
                   _writeTransaction
 ---------------------------------------------------------------------------------
 (2) _writeTransaction                                     7     1      6     564
                                             10 COMRAM     7     1      6
                        _D_SPI_Write
                        _inst2ToByte
 ---------------------------------------------------------------------------------
 (3) _inst2ToByte                                         10     7      3     282
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _D_SPI_Write                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _constructTransaction2                                9     5      4     880
                                              7 COMRAM     9     5      4
           _contructInstruction2Byte
 ---------------------------------------------------------------------------------
 (3) _contructInstruction2Byte                             7     4      3     289
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _constructTransaction1                                5     3      2     243
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _D_ADC_ReadRegister
     _constructTransaction1
     _constructTransaction2
       _contructInstruction2Byte
     _writeTransaction
       _D_SPI_Write
       _inst2ToByte
   _D_ADC_WriteRegister
     _constructTransaction1
     _constructTransaction2
       _contructInstruction2Byte
     _writeTransaction
       _D_SPI_Write
       _inst2ToByte
   _delay1000ms
     _delay100ms
       _delay10ms
   _initialize
     _D_ADC_Init
       _D_SPI_Enable
       _D_SPI_Init
         _D_SPI_Enable
     _D_PORT_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1A      1A       1       27.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
ABS                  0      0       0      11        0.0%
BITBANK3            EF      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Dec 30 22:59:48 2016

                 _writeTransaction 7B64                        _SSPSTATbits 000FC7  
                               l20 7CAE                                 l21 7CB6  
                               l22 7CBC                                 l23 7CC4  
                               l18 7CA8                                 l29 7A28  
                               l38 7A5A                        ?_D_ADC_Init 0001  
                      __CFG_BOR$ON 000000                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l132 7AE0                                l801 7AEA  
                              l805 7AFA                                l921 7CE6  
                              l925 7CF4                                l871 7A84  
                              l919 7CCA                                l867 7A7C  
                              l893 7A9E                                l889 7A96  
                     __CFG_CPB$OFF 000000                                u115 7C96  
                              u116 7C98                                u141 7C7E  
                              u135 7BC8                                u151 7C26  
                              u167 7AF0                       __CFG_CPD$OFF 000000  
                              wreg 000FE8                       __CFG_FOSC$HS 000000  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             _main 7AC4                               start 0002  
                    __CFG_IESO$OFF 000000                      __CFG_MCLRE$ON 000000  
                      ?_D_SPI_Init 0002         ??_contructInstruction2Byte 0004  
                     ___param_bank 000000                       ?_inst2ToByte 0001  
                    __CFG_PLLDIV$5 000000               __size_of_delay1000ms 001A  
                            ?_main 0001                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                    __CFG_USBDIV$1 000000                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                            main@a 001A                              plusw0 000FEB  
                            plusw2 000FDB                __size_of_D_ADC_Init 0016  
                            status 000FD8                 D_SPI_Enable@enable 0001  
                     ?_D_PORT_Init 0001           constructTransaction1@uab 0001  
         constructTransaction2@lra 000A           constructTransaction2@rwb 0008  
                  __initialization 7A18                       ?_D_SPI_Write 0001  
                     __end_of_main 7AE2                             ??_main 001A  
                    __activetblptr 000002                    __CFG_CCP2MX$OFF 000000  
              __size_of_D_SPI_Init 0074                             _ADCON1 000FC1  
                           _SSPBUF 000FC9                 _D_ADC_ReadRegister 7C34  
                   __CFG_XINST$OFF 000000                ?_D_ADC_ReadRegister 0001  
     __size_of_D_ADC_WriteRegister 0054                             tblptru 000FF8  
             ??_D_ADC_ReadRegister 0012           __end_of_writeTransaction 7B98  
            _constructTransaction1 7A32              _constructTransaction2 7B32  
                       __accesstop 0060            __end_of__initialization 7A18  
                  __CFG_PBADEN$OFF 000000                      ___rparam_used 000001  
                    ?_D_SPI_Enable 0001   __end_of_contructInstruction2Byte 7AC4  
                   __pcstackCOMRAM 0001                 __size_of_delay10ms 0022  
                     ??_D_ADC_Init 0004               __size_of_inst2ToByte 0048  
                       _delay100ms 7A74                 __end_of_D_ADC_Init 7A74  
                   ??_D_SPI_Enable 0001                       ??_D_SPI_Init 0003  
             __size_of_D_PORT_Init 002E               __size_of_D_SPI_Write 0010  
                writeTransaction@t 000B                       inst2ToByte@a 0008  
                     inst2ToByte@b 0009                       inst2ToByte@c 000A  
                     inst2ToByte@d 0007             D_ADC_ReadRegister@addr 0013  
           D_ADC_ReadRegister@data 0012                 __end_of_D_SPI_Init 7D00  
                __end_of_delay10ms 7B04             ?_constructTransaction1 0001  
           ?_constructTransaction2 0008                    __CFG_VREGEN$OFF 000000  
                          __Hparam 0000                            __Lparam 0000  
                       delay10ms@d 0002                         delay10ms@i 0003  
                    ??_delay1000ms 0006                     D_SPI_Init@mode 0002  
                  __CFG_STVREN$OFF 000000                            __pcinit 7A18  
                          __ramtop 0800                         _initialize 7A0E  
                          __ptext0 7AC4                            __ptext1 7A0E  
                          __ptext2 7B04                            __ptext3 7A5E  
                          __ptext4 7C8C                            __ptext5 7A48  
                          __ptext6 7A8E                            __ptext7 7A74  
                          __ptext8 7AE2                            __ptext9 7BE0  
__size_of_contructInstruction2Byte 001C          ?_contructInstruction2Byte 0001  
                      ?_delay100ms 0001               end_of_initialization 7A18  
                    __Lmediumconst 0000            D_ADC_WriteRegister@addr 0013  
          D_ADC_WriteRegister@data 0012                _D_ADC_WriteRegister 7BE0  
                        _PORTBbits 000F81                __end_of_delay1000ms 7AA8  
             __end_of_D_SPI_Enable 7A5E               ?_D_ADC_WriteRegister 0012  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                ?_writeTransaction 000B                 ??_writeTransaction 0011  
              __size_of_delay100ms 001A                        ?_initialize 0001  
            ??_D_ADC_WriteRegister 0013                start_initialization 7A18  
          constructTransaction2@db 000C            constructTransaction1@rw 0003  
          constructTransaction2@sz 0009                       delay1000ms@d 0006  
                     delay1000ms@i 0007        __size_of_D_ADC_ReadRegister 0058  
            writeTransaction@input 0011                       D_SPI_Init@MS 0003  
                    ??_inst2ToByte 0004      D_ADC_ReadRegister@transaction 0014  
                      _delay1000ms 7A8E                   __CFG_LPT1OSC$OFF 000000  
          ??_constructTransaction1 0003            ??_constructTransaction2 000C  
                    ??_D_PORT_Init 0001                __size_of_initialize 000A  
                        _delay10ms 7AE2                      ??_D_SPI_Write 0001  
            __size_of_D_SPI_Enable 0016        contructInstruction2Byte@lra 0002  
      contructInstruction2Byte@rwb 0004                __end_of_inst2ToByte 7BE0  
                     ??_delay100ms 0004                           _LATBbits 000F8A  
                       ?_delay10ms 0001  constructTransaction1@transaction1 0004  
                     _D_SPI_Enable 7A48                           _PIR1bits 000F9E  
                 __CFG_WDTPS$32768 000000                __end_of_D_PORT_Init 7B32  
               __end_of_delay100ms 7A8E                __end_of_D_SPI_Write 7A32  
                      delay100ms@d 0004                        delay100ms@i 0005  
                         __Hrparam 0000                           __Lrparam 0000  
                      _inst2ToByte 7B98          __size_of_writeTransaction 0034  
                 inst2ToByte@inst2 0001                       ??_initialize 0004  
         _contructInstruction2Byte 7AA8                           __ptext10 7C34  
                         __ptext11 7B64                           __ptext12 7B98  
                         __ptext13 7A22                           __ptext14 7B32  
                         __ptext15 7AA8                           __ptext16 7A32  
       contructInstruction2Byte@sz 0001                      __size_of_main 001E  
                      ??_delay10ms 0001                        _D_PORT_Init 7B04  
               __end_of_initialize 7A18  constructTransaction2@transaction2 000D  
                      _D_SPI_Write 7A22                       ?_delay1000ms 0001  
                       _D_ADC_Init 7A5E        __end_of_D_ADC_WriteRegister 7C34  
            __CFG_CPUDIV$OSC1_PLL2 000000         __end_of_D_ADC_ReadRegister 7C8C  
   __size_of_constructTransaction1 0016     __size_of_constructTransaction2 0032  
    __end_of_constructTransaction1 7A48      __end_of_constructTransaction2 7B64  
    contructInstruction2Byte@inst2 0005                         _D_SPI_Init 7C8C  
   D_ADC_WriteRegister@transaction 0014                    D_SPI_Write@data 0001  
                      _SSPCON1bits 000FC6  
